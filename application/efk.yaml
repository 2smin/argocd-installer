apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: efk
  namespace: argocd
spec:
  destination:
    namespace: kube-logging
    server: 'https://kubernetes.default.svc'
  source:
    path: manifest/efk
    repoURL: 'https://github.com/tmax-cloud/argocd-installer'
    targetRevision: main
    directory:
      jsonnet:
        tlas:
          - name: es_image_repo
            value: tmaxcloudck
          - name: es_image_tag
            value: elasticsearch:7.2.1
          - name: busybox_image_repo
            value: docker.io
          - name: busybox_image_tag
            value: busybox:1.32.0
          - name: es_volume_size
            value: 50Gi
          - name: kibana_image_repo
            value: docker.elastic.co
          - name: kibana_image_tag
            value: kibana/kibana:7.2.0
          - name: kibana_svc_type
            value: ClusterIP # if either hyperauth_url is None or kibana ingress unavailable, change to LoadBalancer
          - name: gatekeeper_image_repo
            value: quay.io
          - name: gatekeeper_image_tag
            value: keycloak/keycloak-gatekeeper:10.0.0
          - name: kibana_client_id
            value: kibana
          - name: kibana_client_secret
            value: "" # hyperauth kibana client_secret copy
          - name: hyperauth_url
            value: "" # if hyperauth url is None, kibana will deploy without gatekeeper
          - name: hyperauth_realm
            value: tmax
          - name: custom_domain_name
            value: "" # user custom domain name, if not ingress unavailable
          - name: fluentd_image_repo
            value: docker.io
          - name: fluentd_image_tag
            value: fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1
  project: default
