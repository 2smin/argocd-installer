apiVersion: v1
kind: Namespace
metadata:
  name: hyperauth
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hyperauth-admin
  namespace: hyperauth
automountServiceAccountToken: false
secrets:
  - name: hyperauth-admin-token
---
apiVersion: v1
kind: Secret
metadata:
  name: hyperauth-admin-token
  namespace: hyperauth
  annotations:
    kubernetes.io/service-account.name: hyperauth-admin
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hyperauth-pod-checker
rules:
  - apiGroups:
      - ""
    resources:
      - "pods"
    verbs:
      #   - "get"
      - "list"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hyperauth-pod-checker
subjects:
  - kind: ServiceAccount
    name: hyperauth-admin
    namespace: hyperauth
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: hyperauth-pod-checker
---
apiVersion: v1
kind: Secret
metadata:
  name: passwords
  namespace: hyperauth
type: Opaque
data:
  CERTS_PASSWORD: dG1heEAyMw==
  HYPERAUTH_PASSWORD: YWRtaW4=
  HYPERAUTH_ADMIN: YWRtaW4=
  DB_PASSWORD: a2V5Y2xvYWs=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: hyperauth
  labels:
    app: postgresql
spec:
  #storageClassName: csi-cephfs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: hyperauth
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432
      nodePort: 31226
  selector:
    app: postgresql
    tier: postgreSQL
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: hyperauth
  namespace: hyperauth
  labels:
    app: keycloak
  annotations:
    traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
    traefik.ingress.kubernetes.io/service.sticky.cookie.name: hyperauth
    traefik.ingress.kubernetes.io/service.sticky.cookie.secure: "true"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8443
  selector:
    app: hyperauth
  type: LoadBalancer   # ClusterIP or LoadBalancer or NodePort